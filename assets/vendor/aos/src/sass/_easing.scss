$aos-easing: (
  linear: cubic-bezier(.250, .250, .750, .750),

  ease: cubic-bezier(.250, .100, .250, 1),
  easection-in: cubic-bezier(.420, 0, 1, 1),
  easection-out: cubic-bezier(.000, 0, .580, 1),
  easection-in-out: cubic-bezier(.420, 0, .580, 1),

  easection-in-back: cubic-bezier(.6, -.28, .735, .045),
  easection-out-back: cubic-bezier(.175, .885, .32, 1.275),
  easection-in-out-back: cubic-bezier(.68, -.55, .265, 1.55),

  easection-in-sine: cubic-bezier(.47, 0, .745, .715),
  easection-out-sine: cubic-bezier(.39, .575, .565, 1),
  easection-in-out-sine: cubic-bezier(.445, .05, .55, .95),

  easection-in-quad: cubic-bezier(.55, .085, .68, .53),
  easection-out-quad: cubic-bezier(.25, .46, .45, .94),
  easection-in-out-quad: cubic-bezier(.455, .03, .515, .955),

  easection-in-cubic: cubic-bezier(.55, .085, .68, .53),
  easection-out-cubic: cubic-bezier(.25, .46, .45, .94),
  easection-in-out-cubic: cubic-bezier(.455, .03, .515, .955),

  easection-in-quart: cubic-bezier(.55, .085, .68, .53),
  easection-out-quart: cubic-bezier(.25, .46, .45, .94),
  easection-in-out-quart: cubic-bezier(.455, .03, .515, .955)
);

// Easings implementations
// Default timing function: 'ease'

[data-aos] {
  @each $key, $val in $aos-easing {
    body[data-aos-easing="#{$key}"] &,
    &[data-aos][data-aos-easing="#{$key}"] {
      transition-timing-function: $val;
    }
  }
}
